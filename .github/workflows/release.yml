on:
  push:
    branches:
      - master

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      keyring: ${{ steps.create-apt-repo.outputs.keyring }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Build package
        id: build
        run: |
          sed -i "s,^Description:,Files:$(find . -type f | grep -oP '(?<=^\./).*' | grep -vP '^(\.|debian/)' | while read -r file; do echo -e " $file /opt/closure/$file"; done | grep -oP '.*(?=/)' | awk -v ORS='\\n' '1')Description:," debian/control
          sed -i "s,^Files:,Files:$(find . -type f | grep -oP '(?<=^\./).*' | grep -P '(?<=^debian/).+' | while read -r file; do echo -e " $file /opt/closure/DEBIAN/$file"; done | grep -oP '.*(?=/)' | awk -v ORS='\\n' '1')," debian/control
          sudo apt-get update
          sudo apt-get install -y equivs
          equivs-build debian/control
          echo -e "built=$?\ntag=$(grep -oP '(?<=^Version: ).*' debian/control)\nmessage=$(git log -1 --pretty=%B)\n" >> "$GITHUB_OUTPUT"

      - name: Create release
        if: ${{ steps.build.outputs.built == '0' }}
        uses: ncipollo/release-action@v1
        with:
          artifacts: "*.deb"
          body: ${{ steps.build.outputs.message }}
          tag: "v${{ steps.build.outputs.tag }}"
          commit: "master"
          allowUpdates: true

      - name: Generate repo
        uses: morph027/apt-repo-action@main
        id: create-apt-repo
        with:
          import-from-repo-url: deb https://ipitio.github.io/closure/ master main
          import-from-repo-failure-allow: true
          repo-name: closure
          codename: master
          origin: github.com/ipitio/closure
          signing-key: ${{ secrets.SIGNING_KEY }}
          architectures: all

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        id: upload-artifact
        with:
          name: github-pages
          path: ${{ steps.create-apt-repo.outputs.dir }}

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Deploy repo
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Add summary
        run: |
          echo ':rocket:' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          echo 'curl -sfLo /etc/apt.trusted.gpg.d/${{ needs.build.outputs.keyring }}.asc ${{ steps.deployment.outputs.page_url }}gpg.key' >> $GITHUB_STEP_SUMMARY
          echo 'echo "deb ${{ steps.deployment.outputs.page_url }} master main" >/etc/apt/sources.list.d/closure.list' >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
